<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Brijesh Pant</title>
    <link>/brijeshpant.github.io/tags/git/index.xml</link>
    <description>Recent content in Git on Brijesh Pant</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>pantbrijesh20@gmail.com (brijesh pant)</managingEditor>
    <webMaster>pantbrijesh20@gmail.com (brijesh pant)</webMaster>
    <atom:link href="/brijeshpant.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Configure multiple git accounts for ssh</title>
      <link>/brijeshpant.github.io/2016/02/configuring_multiple_git_account/</link>
      <pubDate>Sun, 28 Feb 2016 12:00:01 +0230</pubDate>
      <author>pantbrijesh20@gmail.com (brijesh pant)</author>
      <guid>/brijeshpant.github.io/2016/02/configuring_multiple_git_account/</guid>
      <description>&lt;p&gt;I encountered a scenario when i had to use multiple git accounts.I have my personal github account to put my public git repositories that i want to share with others. But to create my own private repositories i couldn&amp;rsquo;t use the same account,as it costs money.I had to switch to bitbucket.And finally using my project specific to my company i have another github account.&lt;/p&gt;

&lt;p&gt;Having multiple account beside remembering the password there is one more challenge.&lt;/p&gt;

&lt;p&gt;Basically,when you want to access git there are two options one is using the https communication.For that you have to provide your username and password every time you access git. i.e. to pull from repository or to push to repository.Don&amp;rsquo;t think any body does that. Here you will be using another option that is using secure shell(ssh communication).&lt;/p&gt;

&lt;p&gt;For using ssh you will generate private and public key pairs. for more information visit   &lt;a href=&#34;https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/&#34;&gt;generating_ssh_key&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;when you have single account it is simple enough.You just need to add your public key to your github or bitbucket account.
and then when you clone any of the repositories associated with that account.
you just need to do something like following&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:owner/githubrepo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here there are four attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git: user&lt;/li&gt;
&lt;li&gt;github.com:host name&lt;/li&gt;
&lt;li&gt;owner: owner of the repository&lt;/li&gt;
&lt;li&gt;githubrepo: name of the repository&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;now when you apply the above command.
ssh connection will be established and the default key would be used to authenticate.
For any of your subsequent pull/push you need not to worry.It will be silently authenticated.&lt;/p&gt;

&lt;p&gt;But when you have multiple accounts it is not that simple.I realized this when i set up keys for my new account. I tried to clone my new repository. Guess what i got the following error&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@bitbucket.org:brijeshpant/testrepo.git
Cloning into &#39;testrepo&#39;...
Permission denied (publickey).
fatal: Could not read from remote repository.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was like Hey!it&amp;rsquo;s my repository how the hell i can&amp;rsquo;t access this?
Then i dug into this and found that while authenticating,ssh client was not able to distinguish between my keys.So I had to give some clue to my ssh client which key to use when.&lt;/p&gt;

&lt;p&gt;Here are the things that needed to be done.&lt;/p&gt;

&lt;p&gt;Create config file in the .ssh folder.
Add following entry for host1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host host1
    HostName github.com
    User git
    IdentityFile ~/.ssh/host1_id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this entry we have defined that for host1 &amp;lsquo;host1_id_rsa&amp;rsquo; key will be used&lt;/p&gt;

&lt;p&gt;similarly we can add entry for other hosts.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host host2
    HostName github.com
    User git
    IdentityFile ~/.ssh/host2_id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now when we are using any of our host.&lt;/p&gt;

&lt;p&gt;instead of &lt;code&gt;git clone git@github.com:owner/githubrepo.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;use &lt;code&gt;git clone host1:owner/githubrepo.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is pretty much straight forward now for ssh client,for host1 it has to use ‘host1_id_rsa’
 and for the host2 ‘host2_id_rsa’&lt;/p&gt;

&lt;p&gt;By adding this configuration  you can add as many git account as you want.Why to restrict to git account,it is equally likely that you connect with lot’s of other server using ssh. All of the servers can be configured here and every time you access those servers you need not to provide the key every time&lt;/p&gt;

&lt;p&gt;generally people do &lt;code&gt;ssh -i ~/.ssh/yourkey username@serverhost&lt;/code&gt;
instead you can use &lt;code&gt;ssh hostName&lt;/code&gt;
By doing these configurations once,you need not even to remember username and server name.
This will make your life much easier afterword.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Link your github page to your domain</title>
      <link>/brijeshpant.github.io/2016/02/mapping-gitub-page-to-your-preferred-domain-name/</link>
      <pubDate>Sun, 21 Feb 2016 14:14:56 +0530</pubDate>
      <author>pantbrijesh20@gmail.com (brijesh pant)</author>
      <guid>/brijeshpant.github.io/2016/02/mapping-gitub-page-to-your-preferred-domain-name/</guid>
      <description>&lt;p&gt;For the developers it is quite common now a days to create there blogs,websites using the same tool which they use to version control their code.
Yes i am talking about git.You can create your static github pages using &lt;a href=&#34;https://pages.github.com&#34; target=&#34;_blank&#34;&gt;github pages&lt;/a&gt;
and then using the Static site generators like &lt;a href=&#34;https://gohugo.io/overview/introduction/&#34; target=&#34;_blank&#34;&gt; hugo &lt;/a&gt; or &lt;a href=&#34;https://jekyllrb.com&#34; target=&#34;_blank&#34;&gt;jekyl&lt;/a&gt;
you can build your website.Being on the github these websites are accessible using your githureponame.github.io, but usually you would like people to access your website using your preferred domain name. right?&lt;/p&gt;

&lt;p&gt;For that very purpose you can follow these simple steps.
First thing you need to do is make your git repository aware of your domain name.&lt;/p&gt;

&lt;p&gt;this can be done by adding CNAME file in your repository at the root level. In this file add your domain name. i.e. if your domain name is www.mydomainname.com. just add one line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;www.mydomainname.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure that your file name(CNAME) is in uppercase.&lt;/p&gt;

&lt;p&gt;Now it&amp;rsquo;s time to change Settings in your domain provider&lt;/p&gt;

&lt;p&gt;I will take example of  &lt;a href=&#34;https://in.godaddy.com&#34; target=&#34;_blank&#34;&gt; go daddy &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In your go daddy account select My Products option from the drop down menu at the top right corner&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;brijeshpant.github.io/media/myproduct.png&#34; alt=&#34;My products&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You will see list of the products. One of them will be the Domains.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;brijeshpant.github.io/media/domains.png&#34; alt=&#34;Domains&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click Manage button against the domains.&lt;/p&gt;

&lt;p&gt;you will see all of your domains listed. Just go to the DOMAIN DETAILS page by selecting Manage DNS from your preferred domain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;brijeshpant.github.io/media/manageDns.png&#34; alt=&#34;Manage DNS&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Here you have to modify two things&lt;/p&gt;

&lt;p&gt;A record and the CName alias&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;brijeshpant.github.io/media/domainSettings.png&#34; alt=&#34;Domains Settings&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For editing A record enter ip address of your github page.&lt;/p&gt;

&lt;p&gt;you can find ip address  of your github page using following command on your terminal&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; dig yourgitgubrepo.gitgub.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ip associated with A record is the ip of your github page.
 Add this ip to your A record in the Points To section of @ host .&lt;/p&gt;

&lt;p&gt;For adding alias CName.
 add one more entry for your host
 add www in host field and your githubrepo.github.io in the Points to field.
 And then save the setting these changes will take at most 24 hrs to get reflected.If you are lucky you will see them in couple of minutes.&lt;/p&gt;

&lt;p&gt;you can cross verify these changes by applying following Command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; dig www.yourdomainname
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are able to see the ip,you added with the A record you are good to go. otherwise you would have to wait for little longer.&lt;/p&gt;

&lt;p&gt;once these changes are reflected. you can just use your domain name to access your website and share with your viewers.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>